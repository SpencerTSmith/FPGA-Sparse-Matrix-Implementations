#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_BUNDLE_A_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_A_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_A_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUNDLE_A_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_A_AWLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUNDLE_A_AWSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUNDLE_A_AWBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUNDLE_A_AWLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUNDLE_A_AWCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUNDLE_A_AWPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUNDLE_A_AWQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUNDLE_A_AWREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_BUNDLE_A_AWUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_A_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_A_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_A_WDATA", 32, hls_out, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_BUNDLE_A_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_BUNDLE_A_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUNDLE_A_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_A_WUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_A_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_A_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_A_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUNDLE_A_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_A_ARLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUNDLE_A_ARSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUNDLE_A_ARBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUNDLE_A_ARLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUNDLE_A_ARCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUNDLE_A_ARPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUNDLE_A_ARQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUNDLE_A_ARREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_BUNDLE_A_ARUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_A_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_A_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_A_RDATA", 32, hls_in, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_BUNDLE_A_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUNDLE_A_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_A_RUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_A_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUNDLE_A_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_A_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_A_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUNDLE_A_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_A_BUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_B_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_B_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_B_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUNDLE_B_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_B_AWLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUNDLE_B_AWSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUNDLE_B_AWBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUNDLE_B_AWLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUNDLE_B_AWCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUNDLE_B_AWPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUNDLE_B_AWQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUNDLE_B_AWREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_BUNDLE_B_AWUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_B_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_B_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_B_WDATA", 32, hls_out, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_BUNDLE_B_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_BUNDLE_B_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUNDLE_B_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_B_WUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_B_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_B_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_B_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUNDLE_B_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_B_ARLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUNDLE_B_ARSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUNDLE_B_ARBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUNDLE_B_ARLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUNDLE_B_ARCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUNDLE_B_ARPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUNDLE_B_ARQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUNDLE_B_ARREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_BUNDLE_B_ARUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_B_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_B_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_B_RDATA", 32, hls_in, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_BUNDLE_B_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUNDLE_B_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_B_RUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_B_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUNDLE_B_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_B_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_B_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUNDLE_B_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_B_BUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_C_AWVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_C_AWREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_C_AWADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUNDLE_C_AWID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_C_AWLEN", 8, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUNDLE_C_AWSIZE", 3, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUNDLE_C_AWBURST", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUNDLE_C_AWLOCK", 2, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUNDLE_C_AWCACHE", 4, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUNDLE_C_AWPROT", 3, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUNDLE_C_AWQOS", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUNDLE_C_AWREGION", 4, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_BUNDLE_C_AWUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_C_WVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_C_WREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_C_WDATA", 32, hls_out, 2, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_BUNDLE_C_WSTRB", 4, hls_out, 2, "m_axi", "STRB", 1),
	Port_Property("m_axi_BUNDLE_C_WLAST", 1, hls_out, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUNDLE_C_WID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_C_WUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_C_ARVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_C_ARREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_C_ARADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUNDLE_C_ARID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_C_ARLEN", 8, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUNDLE_C_ARSIZE", 3, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUNDLE_C_ARBURST", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUNDLE_C_ARLOCK", 2, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUNDLE_C_ARCACHE", 4, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUNDLE_C_ARPROT", 3, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUNDLE_C_ARQOS", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUNDLE_C_ARREGION", 4, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_BUNDLE_C_ARUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_C_RVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_C_RREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_C_RDATA", 32, hls_in, 2, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_BUNDLE_C_RLAST", 1, hls_in, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUNDLE_C_RID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_C_RUSER", 1, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_C_RRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUNDLE_C_BVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_C_BREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_C_BRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUNDLE_C_BID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_C_BUSER", 1, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_D_AWVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_D_AWREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_D_AWADDR", 64, hls_out, 3, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUNDLE_D_AWID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_D_AWLEN", 8, hls_out, 3, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUNDLE_D_AWSIZE", 3, hls_out, 3, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUNDLE_D_AWBURST", 2, hls_out, 3, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUNDLE_D_AWLOCK", 2, hls_out, 3, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUNDLE_D_AWCACHE", 4, hls_out, 3, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUNDLE_D_AWPROT", 3, hls_out, 3, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUNDLE_D_AWQOS", 4, hls_out, 3, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUNDLE_D_AWREGION", 4, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_BUNDLE_D_AWUSER", 1, hls_out, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_D_WVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_D_WREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_D_WDATA", 32, hls_out, 3, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_BUNDLE_D_WSTRB", 4, hls_out, 3, "m_axi", "STRB", 1),
	Port_Property("m_axi_BUNDLE_D_WLAST", 1, hls_out, 3, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUNDLE_D_WID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_D_WUSER", 1, hls_out, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_D_ARVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_D_ARREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_D_ARADDR", 64, hls_out, 3, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUNDLE_D_ARID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_D_ARLEN", 8, hls_out, 3, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUNDLE_D_ARSIZE", 3, hls_out, 3, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUNDLE_D_ARBURST", 2, hls_out, 3, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUNDLE_D_ARLOCK", 2, hls_out, 3, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUNDLE_D_ARCACHE", 4, hls_out, 3, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUNDLE_D_ARPROT", 3, hls_out, 3, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUNDLE_D_ARQOS", 4, hls_out, 3, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUNDLE_D_ARREGION", 4, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_BUNDLE_D_ARUSER", 1, hls_out, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_D_RVALID", 1, hls_in, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_D_RREADY", 1, hls_out, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_D_RDATA", 32, hls_in, 3, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_BUNDLE_D_RLAST", 1, hls_in, 3, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUNDLE_D_RID", 1, hls_in, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_D_RUSER", 1, hls_in, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUNDLE_D_RRESP", 2, hls_in, 3, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUNDLE_D_BVALID", 1, hls_in, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUNDLE_D_BREADY", 1, hls_out, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_BUNDLE_D_BRESP", 2, hls_in, 3, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUNDLE_D_BID", 1, hls_in, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_BUNDLE_D_BUSER", 1, hls_in, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_gmem_AWVALID", 1, hls_out, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_AWREADY", 1, hls_in, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_AWADDR", 64, hls_out, 4, "m_axi", "ADDR", 1),
	Port_Property("m_axi_gmem_AWID", 1, hls_out, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_AWLEN", 8, hls_out, 4, "m_axi", "SIZE", 1),
	Port_Property("m_axi_gmem_AWSIZE", 3, hls_out, 4, "m_axi", "BURST", 1),
	Port_Property("m_axi_gmem_AWBURST", 2, hls_out, 4, "m_axi", "LOCK", 1),
	Port_Property("m_axi_gmem_AWLOCK", 2, hls_out, 4, "m_axi", "CACHE", 1),
	Port_Property("m_axi_gmem_AWCACHE", 4, hls_out, 4, "m_axi", "PROT", 1),
	Port_Property("m_axi_gmem_AWPROT", 3, hls_out, 4, "m_axi", "QOS", 1),
	Port_Property("m_axi_gmem_AWQOS", 4, hls_out, 4, "m_axi", "REGION", 1),
	Port_Property("m_axi_gmem_AWREGION", 4, hls_out, 4, "m_axi", "USER", 1),
	Port_Property("m_axi_gmem_AWUSER", 1, hls_out, 4, "m_axi", "DATA", 1),
	Port_Property("m_axi_gmem_WVALID", 1, hls_out, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_WREADY", 1, hls_in, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_WDATA", 32, hls_out, 4, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_gmem_WSTRB", 4, hls_out, 4, "m_axi", "STRB", 1),
	Port_Property("m_axi_gmem_WLAST", 1, hls_out, 4, "m_axi", "LAST", 1),
	Port_Property("m_axi_gmem_WID", 1, hls_out, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_WUSER", 1, hls_out, 4, "m_axi", "DATA", 1),
	Port_Property("m_axi_gmem_ARVALID", 1, hls_out, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_ARREADY", 1, hls_in, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_ARADDR", 64, hls_out, 4, "m_axi", "ADDR", 1),
	Port_Property("m_axi_gmem_ARID", 1, hls_out, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_ARLEN", 8, hls_out, 4, "m_axi", "SIZE", 1),
	Port_Property("m_axi_gmem_ARSIZE", 3, hls_out, 4, "m_axi", "BURST", 1),
	Port_Property("m_axi_gmem_ARBURST", 2, hls_out, 4, "m_axi", "LOCK", 1),
	Port_Property("m_axi_gmem_ARLOCK", 2, hls_out, 4, "m_axi", "CACHE", 1),
	Port_Property("m_axi_gmem_ARCACHE", 4, hls_out, 4, "m_axi", "PROT", 1),
	Port_Property("m_axi_gmem_ARPROT", 3, hls_out, 4, "m_axi", "QOS", 1),
	Port_Property("m_axi_gmem_ARQOS", 4, hls_out, 4, "m_axi", "REGION", 1),
	Port_Property("m_axi_gmem_ARREGION", 4, hls_out, 4, "m_axi", "USER", 1),
	Port_Property("m_axi_gmem_ARUSER", 1, hls_out, 4, "m_axi", "DATA", 1),
	Port_Property("m_axi_gmem_RVALID", 1, hls_in, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_RREADY", 1, hls_out, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_RDATA", 32, hls_in, 4, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_gmem_RLAST", 1, hls_in, 4, "m_axi", "LAST", 1),
	Port_Property("m_axi_gmem_RID", 1, hls_in, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_RUSER", 1, hls_in, 4, "m_axi", "DATA", 1),
	Port_Property("m_axi_gmem_RRESP", 2, hls_in, 4, "m_axi", "RESP", 1),
	Port_Property("m_axi_gmem_BVALID", 1, hls_in, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_BREADY", 1, hls_out, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_BRESP", 2, hls_in, 4, "m_axi", "RESP", 1),
	Port_Property("m_axi_gmem_BID", 1, hls_in, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_BUSER", 1, hls_in, 4, "m_axi", "DATA", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_r_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_r_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_r_AWADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_r_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_r_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_r_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_r_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_r_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_r_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_r_ARADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_r_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_r_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_r_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_r_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_r_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_r_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_r_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "csr_vmul";
