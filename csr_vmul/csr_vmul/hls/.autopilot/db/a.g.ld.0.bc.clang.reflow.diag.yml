--- !Passed
Pass:            reflow-disaggr
Name:            DisaggrSucc
Function:        apatb_csr_vmul_ir
Args:            
  - String:          'Disaggregating variable '''
  - Name:            matrix
  - String:          ''''
...
--- !Passed
Pass:            reflow-disaggr
Name:            DisaggrSucc
Function:        apatb_csr_vmul_ir
Args:            
  - String:          'Disaggregating variable '''
  - Name:            vector
  - String:          ''''
...
--- !Passed
Pass:            reflow-disaggr
Name:            DisaggrSucc
Function:        apatb_csr_vmul_ir
Args:            
  - String:          'Disaggregating variable '''
  - Name:            out
  - String:          ''''
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Loop '''
  - LoopName:        anonymous
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 87, Column: 5 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Loop '''
  - LoopName:        unroll_partial
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 91, Column: 7 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Loop '''
  - LoopName:        partials
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 102, Column: 5 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Loop '''
  - LoopName:        add_all
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        anonymous
  - String:          ''' ('
  - LoopLoc:         ''
  - String:          ') '
  - String:          'in function '''
  - String:          csr_vmul
  - String:          ''' completely with a factor of '
  - Factor:          '16'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        add_all
  - String:          ''' ('
  - LoopLoc:         'csr_vmul.cpp:102:5'
  - String:          ') '
  - String:          'in function '''
  - String:          csr_vmul
  - String:          ''' completely with a factor of '
  - Factor:          '16'
...
--- !Missed
Pass:            inline
Name:            NeverInline
Function:        apatb_csr_vmul_ir
Args:            
  - Callee:          'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' not inlined into '
  - Caller:          apatb_csr_vmul_ir
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        partials
  - String:          ''' ('
  - LoopLoc:         'csr_vmul.cpp:91:7'
  - String:          ') '
  - String:          'in function '''
  - String:          csr_vmul
  - String:          ''' completely with a factor of '
  - Factor:          '16'
...
--- !Passed
Pass:            reflow-array-partition
Name:            ArrayXform
DebugLoc:        { File: csr_vmul.cpp, Line: 83, Column: 8 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Applying '
  - String:          array_partition
  - String:          ' to '''
  - UOName:          partial_sums
  - String:          ''':'
  - String:          ' '
  - Mode:            Complete
  - String:          ' partitioning'
  - String:          ' on dimension '
  - Dim:             '1'
  - String:          .
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: csr_vmul.cpp, Line: 48, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        vector_values79seq
  - ArrayName:       vector_values
  - String:          ' '
  - BundleName:      BUNDLE_D
  - String:          ' '
  - LoopName:        load_vector
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:48:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: csr_vmul.cpp, Line: 51, Column: 20 }
  - OrigDirection:   read
  - OrigID:          for.inc.load.6
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: csr_vmul.cpp, Line: 56, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        matrix_col_indices80seq
  - ArrayName:       matrix_col_indices
  - String:          ' '
  - BundleName:      BUNDLE_B
  - String:          ' '
  - LoopName:        load_col_indices
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:56:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: csr_vmul.cpp, Line: 59, Column: 25 }
  - OrigDirection:   read
  - OrigID:          for.inc13.load.6
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: csr_vmul.cpp, Line: 64, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        matrix_row_pointers81seq
  - ArrayName:       matrix_row_pointers
  - String:          ' '
  - BundleName:      BUNDLE_A
  - String:          ' '
  - LoopName:        load_row_pointers
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:64:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: csr_vmul.cpp, Line: 67, Column: 26 }
  - OrigDirection:   read
  - OrigID:          for.inc26.load.6
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: csr_vmul.cpp, Line: 72, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        matrix_values82seq
  - ArrayName:       matrix_values
  - String:          ' '
  - BundleName:      BUNDLE_C
  - String:          ' '
  - LoopName:        load_matrix_values
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:72:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: csr_vmul.cpp, Line: 75, Column: 27 }
  - OrigDirection:   read
  - OrigID:          for.inc40.load.6
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: csr_vmul.cpp, Line: 79, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Sequential '
  - Direction:       write
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        out_values83seq
  - ArrayName:       out_values
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        every_row
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:79:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: csr_vmul.cpp, Line: 107, Column: 22 }
  - OrigDirection:   write
  - OrigID:          for.inc91.store.65
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: csr_vmul.cpp, Line: 79, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: csr_vmul.cpp, Line: 79, Column: 3 }
  - OrigDirection:   write
  - OrigID:          out_values83seq
  - ArrayName:       out_values
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        every_row
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:79:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualAlignment
DebugLoc:        { File: csr_vmul.cpp, Line: 72, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to alignment '
  - Alignment:       '1'
  - String:          '(bytes)'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: csr_vmul.cpp, Line: 72, Column: 3 }
  - OrigDirection:   read
  - OrigID:          matrix_values82seq
  - ArrayName:       matrix_values
  - String:          ' '
  - BundleName:      BUNDLE_C
  - String:          ' '
  - LoopName:        load_matrix_values
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:72:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualAlignment
DebugLoc:        { File: csr_vmul.cpp, Line: 64, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Could not widen since type '
  - Type:            i32
  - String:          ' size is greater than or equal to alignment '
  - Alignment:       '1'
  - String:          '(bytes)'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: csr_vmul.cpp, Line: 64, Column: 3 }
  - OrigDirection:   read
  - OrigID:          matrix_row_pointers81seq
  - ArrayName:       matrix_row_pointers
  - String:          ' '
  - BundleName:      BUNDLE_A
  - String:          ' '
  - LoopName:        load_row_pointers
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:64:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualAlignment
DebugLoc:        { File: csr_vmul.cpp, Line: 56, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Could not widen since type '
  - Type:            i32
  - String:          ' size is greater than or equal to alignment '
  - Alignment:       '1'
  - String:          '(bytes)'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: csr_vmul.cpp, Line: 56, Column: 3 }
  - OrigDirection:   read
  - OrigID:          matrix_col_indices80seq
  - ArrayName:       matrix_col_indices
  - String:          ' '
  - BundleName:      BUNDLE_B
  - String:          ' '
  - LoopName:        load_col_indices
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:56:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualAlignment
DebugLoc:        { File: csr_vmul.cpp, Line: 48, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to alignment '
  - Alignment:       '1'
  - String:          '(bytes)'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: csr_vmul.cpp, Line: 48, Column: 3 }
  - OrigDirection:   read
  - OrigID:          vector_values79seq
  - ArrayName:       vector_values
  - String:          ' '
  - BundleName:      BUNDLE_D
  - String:          ' '
  - LoopName:        load_vector
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:48:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 87, Column: 5 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Loop '''
  - LoopName:        unroll_partial
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 87, Column: 5 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Loop '''
  - LoopName:        unroll_partial
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 48, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      BUNDLE_D
  - String:          ' '
  - LoopName:        load_vector
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:48:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 48, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' in loop '''
  - LoopName:        load_vector
  - String:          '''('
  - LoopLoc:         'csr_vmul.cpp:48:3'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      BUNDLE_D
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 56, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq1
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      BUNDLE_B
  - String:          ' '
  - LoopName:        load_col_indices
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:56:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 56, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' in loop '''
  - LoopName:        load_col_indices
  - String:          '''('
  - LoopLoc:         'csr_vmul.cpp:56:3'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      BUNDLE_B
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 64, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq2
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      BUNDLE_A
  - String:          ' '
  - LoopName:        load_row_pointers
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:64:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 64, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' in loop '''
  - LoopName:        load_row_pointers
  - String:          '''('
  - LoopLoc:         'csr_vmul.cpp:64:3'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      BUNDLE_A
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 72, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq3
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      BUNDLE_C
  - String:          ' '
  - LoopName:        load_matrix_values
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:72:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 72, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' in loop '''
  - LoopName:        load_matrix_values
  - String:          '''('
  - LoopLoc:         'csr_vmul.cpp:72:3'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      BUNDLE_C
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 79, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq4
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        every_row
  - String:          ' '
  - LoopLoc:         'csr_vmul.cpp:79:3'
  - String:          ' '
  - Function:        'csr_vmul(CSR_Matrix const*, Vector const*, Vector*)'
    DebugLoc:        { File: csr_vmul.cpp, Line: 3, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: csr_vmul.cpp, Line: 79, Column: 3 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '32'
  - String:          ' in loop '''
  - LoopName:        every_row
  - String:          '''('
  - LoopLoc:         'csr_vmul.cpp:79:3'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 87, Column: 5 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Loop '''
  - LoopName:        unroll_partial
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: csr_vmul.cpp, Line: 87, Column: 5 }
Function:        _Z8csr_vmulPK10CSR_MatrixPK6VectorPS2_
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        unroll_partial
  - String:          ''' ('
  - LoopLoc:         'csr_vmul.cpp:87:5'
  - String:          ') '
  - String:          'in function '''
  - String:          csr_vmul
  - String:          ''' as it has a variable trip count'
...
