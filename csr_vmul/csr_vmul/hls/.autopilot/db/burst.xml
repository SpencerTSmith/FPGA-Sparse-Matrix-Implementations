<VitisHLS:BurstInfo>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="csr_vmul.cpp:48:3" msg_id="214-116" msg_severity="INFO" msg_body="Sequential read of variable length has been inferred" BundleName="BUNDLE_D" VarName="vector_values" LoopLoc="csr_vmul.cpp:48:3" LoopName="load_vector" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" Length="variable" Direction="read" AccessID="vector_values79seq" OrigID="for.inc.load.6" OrigAccess-DebugLoc="csr_vmul.cpp:51:20" OrigDirection="read"/>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="csr_vmul.cpp:56:3" msg_id="214-116" msg_severity="INFO" msg_body="Sequential read of variable length has been inferred" BundleName="BUNDLE_B" VarName="matrix_col_indices" LoopLoc="csr_vmul.cpp:56:3" LoopName="load_col_indices" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" Length="variable" Direction="read" AccessID="matrix_col_indices80seq" OrigID="for.inc13.load.6" OrigAccess-DebugLoc="csr_vmul.cpp:59:25" OrigDirection="read"/>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="csr_vmul.cpp:64:3" msg_id="214-116" msg_severity="INFO" msg_body="Sequential read of variable length has been inferred" BundleName="BUNDLE_A" VarName="matrix_row_pointers" LoopLoc="csr_vmul.cpp:64:3" LoopName="load_row_pointers" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" Length="variable" Direction="read" AccessID="matrix_row_pointers81seq" OrigID="for.inc26.load.6" OrigAccess-DebugLoc="csr_vmul.cpp:67:26" OrigDirection="read"/>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="csr_vmul.cpp:72:3" msg_id="214-116" msg_severity="INFO" msg_body="Sequential read of variable length has been inferred" BundleName="BUNDLE_C" VarName="matrix_values" LoopLoc="csr_vmul.cpp:72:3" LoopName="load_matrix_values" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" Length="variable" Direction="read" AccessID="matrix_values82seq" OrigID="for.inc40.load.6" OrigAccess-DebugLoc="csr_vmul.cpp:75:27" OrigDirection="read"/>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="csr_vmul.cpp:79:3" msg_id="214-116" msg_severity="INFO" msg_body="Sequential write of variable length has been inferred" BundleName="gmem" VarName="out_values" LoopLoc="csr_vmul.cpp:79:3" LoopName="every_row" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" Length="variable" Direction="write" AccessID="out_values83seq" OrigID="for.inc91.store.65" OrigAccess-DebugLoc="csr_vmul.cpp:107:22" OrigDirection="write"/>
    <burst group="BURST_VERBOSE_WIDEN_MISSED" fe_name="GreaterOrEqualThresholdMissed" src_info="csr_vmul.cpp:79:3" msg_id="214-353" msg_severity="INFO" msg_body="Could not widen since type float size is greater than or equal to the max_widen_bitwidth threshold of 0" resolution="214-353" BundleName="gmem" VarName="out_values" LoopLoc="csr_vmul.cpp:79:3" LoopName="every_row" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" OrigID="out_values83seq" OrigAccess-DebugLoc="csr_vmul.cpp:79:3" OrigDirection="write"/>
    <burst group="BURST_VERBOSE_WIDEN_MISSED" fe_name="GreaterOrEqualAlignmentMissed" src_info="csr_vmul.cpp:72:3" msg_id="214-307" msg_severity="INFO" msg_body="Could not widen since type float size is greater than or equal to alignment 1(bytes)" resolution="214-307" BundleName="BUNDLE_C" VarName="matrix_values" LoopLoc="csr_vmul.cpp:72:3" LoopName="load_matrix_values" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" OrigID="matrix_values82seq" OrigAccess-DebugLoc="csr_vmul.cpp:72:3" OrigDirection="read"/>
    <burst group="BURST_VERBOSE_WIDEN_MISSED" fe_name="GreaterOrEqualAlignmentMissed" src_info="csr_vmul.cpp:64:3" msg_id="214-307" msg_severity="INFO" msg_body="Could not widen since type i32 size is greater than or equal to alignment 1(bytes)" resolution="214-307" BundleName="BUNDLE_A" VarName="matrix_row_pointers" LoopLoc="csr_vmul.cpp:64:3" LoopName="load_row_pointers" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" OrigID="matrix_row_pointers81seq" OrigAccess-DebugLoc="csr_vmul.cpp:64:3" OrigDirection="read"/>
    <burst group="BURST_VERBOSE_WIDEN_MISSED" fe_name="GreaterOrEqualAlignmentMissed" src_info="csr_vmul.cpp:56:3" msg_id="214-307" msg_severity="INFO" msg_body="Could not widen since type i32 size is greater than or equal to alignment 1(bytes)" resolution="214-307" BundleName="BUNDLE_B" VarName="matrix_col_indices" LoopLoc="csr_vmul.cpp:56:3" LoopName="load_col_indices" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" OrigID="matrix_col_indices80seq" OrigAccess-DebugLoc="csr_vmul.cpp:56:3" OrigDirection="read"/>
    <burst group="BURST_VERBOSE_WIDEN_MISSED" fe_name="GreaterOrEqualAlignmentMissed" src_info="csr_vmul.cpp:48:3" msg_id="214-307" msg_severity="INFO" msg_body="Could not widen since type float size is greater than or equal to alignment 1(bytes)" resolution="214-307" BundleName="BUNDLE_D" VarName="vector_values" LoopLoc="csr_vmul.cpp:48:3" LoopName="load_vector" ParentFunc="csr_vmul(CSR_Matrix const*, Vector const*, Vector*)" OrigID="vector_values79seq" OrigAccess-DebugLoc="csr_vmul.cpp:48:3" OrigDirection="read"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="csr_vmul.cpp:48:3" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst reads of variable length and bit width 32 in loop 'load_vector' has been inferred on bundle 'BUNDLE_D'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="BUNDLE_D" LoopLoc="csr_vmul.cpp:48:3" LoopName="load_vector" Length="variable" Width="32" Direction="read"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="csr_vmul.cpp:56:3" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst reads of variable length and bit width 32 in loop 'load_col_indices' has been inferred on bundle 'BUNDLE_B'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="BUNDLE_B" LoopLoc="csr_vmul.cpp:56:3" LoopName="load_col_indices" Length="variable" Width="32" Direction="read"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="csr_vmul.cpp:64:3" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst reads of variable length and bit width 32 in loop 'load_row_pointers' has been inferred on bundle 'BUNDLE_A'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="BUNDLE_A" LoopLoc="csr_vmul.cpp:64:3" LoopName="load_row_pointers" Length="variable" Width="32" Direction="read"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="csr_vmul.cpp:72:3" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst reads of variable length and bit width 32 in loop 'load_matrix_values' has been inferred on bundle 'BUNDLE_C'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="BUNDLE_C" LoopLoc="csr_vmul.cpp:72:3" LoopName="load_matrix_values" Length="variable" Width="32" Direction="read"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="csr_vmul.cpp:79:3" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst writes of variable length and bit width 32 in loop 'every_row' has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="gmem" LoopLoc="csr_vmul.cpp:79:3" LoopName="every_row" Length="variable" Width="32" Direction="write"/>
</VitisHLS:BurstInfo>

