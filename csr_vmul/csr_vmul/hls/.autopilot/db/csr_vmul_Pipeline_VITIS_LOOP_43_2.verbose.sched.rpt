

================================================================
== Vitis HLS Report for 'csr_vmul_Pipeline_VITIS_LOOP_43_2'
================================================================
* Date:           Tue Mar  4 00:51:55 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        csr_vmul
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |        ?|        ?|         ?|         ?|    0|    0|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_43_2  |        ?|        ?|        31|          6|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 32


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 32
* Pipeline : 1
  Pipeline-0 : II = 6, D = 32, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%sum = alloca i32 1" [csr_vmul.cpp:40]   --->   Operation 34 'alloca' 'sum' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [csr_vmul.cpp:43]   --->   Operation 35 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%indvar = alloca i32 1"   --->   Operation 36 'alloca' 'indvar' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%vector_values_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %vector_values"   --->   Operation 37 'read' 'vector_values_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%sext_ln43_3_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln43_3"   --->   Operation 38 'read' 'sext_ln43_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%sext_ln43_2_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln43_2"   --->   Operation 39 'read' 'sext_ln43_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%wide_trip_count_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %wide_trip_count"   --->   Operation 40 'read' 'wide_trip_count_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln43_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %sext_ln43"   --->   Operation 41 'read' 'sext_ln43_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%sext_ln43_3_cast = sext i62 %sext_ln43_3_read"   --->   Operation 42 'sext' 'sext_ln43_3_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%sext_ln43_2_cast = sext i62 %sext_ln43_2_read"   --->   Operation 43 'sext' 'sext_ln43_2_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%wide_trip_count_cast = sext i32 %wide_trip_count_read"   --->   Operation 44 'sext' 'wide_trip_count_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%sext_ln43_cast = sext i32 %sext_ln43_read"   --->   Operation 45 'sext' 'sext_ln43_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty_6, i32 0, i32 0, void @empty_7, i32 0, i32 0, void @empty_8, void @empty, void @empty_7, i32 16, i32 16, i32 16, i32 16, void @empty_7, void @empty_7, i32 4294967295, i32 0, i32 0"   --->   Operation 46 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (1.58ns)   --->   "%store_ln0 = store i64 0, i64 %indvar"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 48 [1/1] (1.58ns)   --->   "%store_ln43 = store i64 %sext_ln43_cast, i64 %i" [csr_vmul.cpp:43]   --->   Operation 48 'store' 'store_ln43' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 49 [1/1] (1.58ns)   --->   "%store_ln40 = store i32 0, i32 %sum" [csr_vmul.cpp:40]   --->   Operation 49 'store' 'store_ln40' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 50 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.10>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%i_1 = load i64 %i" [csr_vmul.cpp:43]   --->   Operation 51 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%indvar_load = load i64 %indvar" [csr_vmul.cpp:45]   --->   Operation 52 'load' 'indvar_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 53 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (3.52ns)   --->   "%icmp_ln43 = icmp_slt  i64 %i_1, i64 %wide_trip_count_cast" [csr_vmul.cpp:43]   --->   Operation 54 'icmp' 'icmp_ln43' <Predicate = true> <Delay = 3.52> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (3.52ns)   --->   "%add_ln43 = add i64 %indvar_load, i64 1" [csr_vmul.cpp:43]   --->   Operation 55 'add' 'add_ln43' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln43 = br i1 %icmp_ln43, void %for.inc19.loopexit.exitStub, void %for.inc.split" [csr_vmul.cpp:43]   --->   Operation 56 'br' 'br_ln43' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (3.52ns)   --->   "%add_ln45 = add i64 %indvar_load, i64 %sext_ln43_2_cast" [csr_vmul.cpp:45]   --->   Operation 57 'add' 'add_ln45' <Predicate = (icmp_ln43)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %add_ln45" [csr_vmul.cpp:45]   --->   Operation 58 'getelementptr' 'gmem_addr' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (3.52ns)   --->   "%add_ln45_1 = add i64 %indvar_load, i64 %sext_ln43_3_cast" [csr_vmul.cpp:45]   --->   Operation 59 'add' 'add_ln45_1' <Predicate = (icmp_ln43)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %add_ln45_1" [csr_vmul.cpp:45]   --->   Operation 60 'getelementptr' 'gmem_addr_1' <Predicate = (icmp_ln43)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (1.58ns)   --->   "%store_ln43 = store i64 %add_ln43, i64 %indvar" [csr_vmul.cpp:43]   --->   Operation 61 'store' 'store_ln43' <Predicate = (icmp_ln43)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 62 [8/8] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i64 1" [csr_vmul.cpp:45]   --->   Operation 62 'readreq' 'gmem_load_req' <Predicate = (icmp_ln43)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 63 [7/8] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i64 1" [csr_vmul.cpp:45]   --->   Operation 63 'readreq' 'gmem_load_req' <Predicate = (icmp_ln43)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 64 [8/8] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i64 1" [csr_vmul.cpp:45]   --->   Operation 64 'readreq' 'gmem_load_1_req' <Predicate = (icmp_ln43)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 65 [6/8] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i64 1" [csr_vmul.cpp:45]   --->   Operation 65 'readreq' 'gmem_load_req' <Predicate = (icmp_ln43)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 66 [7/8] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i64 1" [csr_vmul.cpp:45]   --->   Operation 66 'readreq' 'gmem_load_1_req' <Predicate = (icmp_ln43)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 67 [5/8] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i64 1" [csr_vmul.cpp:45]   --->   Operation 67 'readreq' 'gmem_load_req' <Predicate = (icmp_ln43)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 68 [6/8] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i64 1" [csr_vmul.cpp:45]   --->   Operation 68 'readreq' 'gmem_load_1_req' <Predicate = (icmp_ln43)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 69 [4/8] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i64 1" [csr_vmul.cpp:45]   --->   Operation 69 'readreq' 'gmem_load_req' <Predicate = (icmp_ln43)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 70 [5/8] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i64 1" [csr_vmul.cpp:45]   --->   Operation 70 'readreq' 'gmem_load_1_req' <Predicate = (icmp_ln43)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 71 [1/1] (3.52ns)   --->   "%add_ln43_1 = add i64 %i_1, i64 1" [csr_vmul.cpp:43]   --->   Operation 71 'add' 'add_ln43_1' <Predicate = (icmp_ln43)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 72 [1/1] (1.58ns)   --->   "%store_ln43 = store i64 %add_ln43_1, i64 %i" [csr_vmul.cpp:43]   --->   Operation 72 'store' 'store_ln43' <Predicate = (icmp_ln43)> <Delay = 1.58>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 73 [3/8] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i64 1" [csr_vmul.cpp:45]   --->   Operation 73 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 74 [4/8] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i64 1" [csr_vmul.cpp:45]   --->   Operation 74 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 75 [2/8] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i64 1" [csr_vmul.cpp:45]   --->   Operation 75 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 76 [3/8] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i64 1" [csr_vmul.cpp:45]   --->   Operation 76 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 77 [1/8] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i64 1" [csr_vmul.cpp:45]   --->   Operation 77 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 78 [2/8] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i64 1" [csr_vmul.cpp:45]   --->   Operation 78 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 79 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr" [csr_vmul.cpp:45]   --->   Operation 79 'read' 'gmem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 80 [1/8] (7.30ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_1, i64 1" [csr_vmul.cpp:45]   --->   Operation 80 'readreq' 'gmem_load_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 81 [1/1] (7.30ns)   --->   "%gmem_addr_1_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr_1" [csr_vmul.cpp:45]   --->   Operation 81 'read' 'gmem_addr_1_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 3.52>
ST_13 : Operation 82 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i34 @_ssdm_op_BitConcatenate.i34.i32.i2, i32 %gmem_addr_1_read, i2 0" [csr_vmul.cpp:45]   --->   Operation 82 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 83 [1/1] (0.00ns)   --->   "%sext_ln45 = sext i34 %shl_ln1" [csr_vmul.cpp:45]   --->   Operation 83 'sext' 'sext_ln45' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 84 [1/1] (3.52ns)   --->   "%add_ln45_2 = add i64 %sext_ln45, i64 %vector_values_read" [csr_vmul.cpp:45]   --->   Operation 84 'add' 'add_ln45_2' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 85 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln45_2, i32 2, i32 63" [csr_vmul.cpp:45]   --->   Operation 85 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 86 [1/1] (0.00ns)   --->   "%sext_ln45_1 = sext i62 %trunc_ln2" [csr_vmul.cpp:45]   --->   Operation 86 'sext' 'sext_ln45_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 87 [1/1] (0.00ns)   --->   "%gmem_addr_2 = getelementptr i32 %gmem, i64 %sext_ln45_1" [csr_vmul.cpp:45]   --->   Operation 87 'getelementptr' 'gmem_addr_2' <Predicate = true> <Delay = 0.00>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 88 [8/8] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i64 1" [csr_vmul.cpp:45]   --->   Operation 88 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 89 [7/8] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i64 1" [csr_vmul.cpp:45]   --->   Operation 89 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 90 [6/8] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i64 1" [csr_vmul.cpp:45]   --->   Operation 90 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 91 [5/8] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i64 1" [csr_vmul.cpp:45]   --->   Operation 91 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 92 [4/8] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i64 1" [csr_vmul.cpp:45]   --->   Operation 92 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 93 [3/8] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i64 1" [csr_vmul.cpp:45]   --->   Operation 93 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 7.30>
ST_20 : Operation 94 [2/8] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i64 1" [csr_vmul.cpp:45]   --->   Operation 94 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 7.30>
ST_21 : Operation 95 [1/8] (7.30ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr_2, i64 1" [csr_vmul.cpp:45]   --->   Operation 95 'readreq' 'gmem_load_2_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 7.30>
ST_22 : Operation 96 [1/1] (7.30ns)   --->   "%gmem_addr_2_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr_2" [csr_vmul.cpp:45]   --->   Operation 96 'read' 'gmem_addr_2_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 111 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 5.70>
ST_23 : Operation 97 [1/1] (0.00ns)   --->   "%bitcast_ln45 = bitcast i32 %gmem_addr_read" [csr_vmul.cpp:45]   --->   Operation 97 'bitcast' 'bitcast_ln45' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 98 [1/1] (0.00ns)   --->   "%bitcast_ln45_1 = bitcast i32 %gmem_addr_2_read" [csr_vmul.cpp:45]   --->   Operation 98 'bitcast' 'bitcast_ln45_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 99 [4/4] (5.70ns)   --->   "%mul = fmul i32 %bitcast_ln45, i32 %bitcast_ln45_1" [csr_vmul.cpp:45]   --->   Operation 99 'fmul' 'mul' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 5.70>
ST_24 : Operation 100 [3/4] (5.70ns)   --->   "%mul = fmul i32 %bitcast_ln45, i32 %bitcast_ln45_1" [csr_vmul.cpp:45]   --->   Operation 100 'fmul' 'mul' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 5.70>
ST_25 : Operation 101 [2/4] (5.70ns)   --->   "%mul = fmul i32 %bitcast_ln45, i32 %bitcast_ln45_1" [csr_vmul.cpp:45]   --->   Operation 101 'fmul' 'mul' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 5.70>
ST_26 : Operation 102 [1/4] (5.70ns)   --->   "%mul = fmul i32 %bitcast_ln45, i32 %bitcast_ln45_1" [csr_vmul.cpp:45]   --->   Operation 102 'fmul' 'mul' <Predicate = true> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 113 [1/1] (0.00ns)   --->   "%sum_load_1 = load i32 %sum"   --->   Operation 113 'load' 'sum_load_1' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_26 : Operation 114 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %sum_out, i32 %sum_load_1"   --->   Operation 114 'write' 'write_ln0' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_26 : Operation 115 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 115 'ret' 'ret_ln0' <Predicate = (!icmp_ln43)> <Delay = 1.58>

State 27 <SV = 26> <Delay = 7.25>
ST_27 : Operation 103 [1/1] (0.00ns)   --->   "%sum_load = load i32 %sum" [csr_vmul.cpp:45]   --->   Operation 103 'load' 'sum_load' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 104 [5/5] (7.25ns)   --->   "%sum_1 = fadd i32 %sum_load, i32 %mul" [csr_vmul.cpp:45]   --->   Operation 104 'fadd' 'sum_1' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 7.25>
ST_28 : Operation 105 [4/5] (7.25ns)   --->   "%sum_1 = fadd i32 %sum_load, i32 %mul" [csr_vmul.cpp:45]   --->   Operation 105 'fadd' 'sum_1' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 7.25>
ST_29 : Operation 106 [3/5] (7.25ns)   --->   "%sum_1 = fadd i32 %sum_load, i32 %mul" [csr_vmul.cpp:45]   --->   Operation 106 'fadd' 'sum_1' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 7.25>
ST_30 : Operation 107 [2/5] (7.25ns)   --->   "%sum_1 = fadd i32 %sum_load, i32 %mul" [csr_vmul.cpp:45]   --->   Operation 107 'fadd' 'sum_1' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 7.25>
ST_31 : Operation 108 [1/5] (7.25ns)   --->   "%sum_1 = fadd i32 %sum_load, i32 %mul" [csr_vmul.cpp:45]   --->   Operation 108 'fadd' 'sum_1' <Predicate = true> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 1.58>
ST_32 : Operation 109 [1/1] (0.00ns)   --->   "%specpipeline_ln40 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_7" [csr_vmul.cpp:40]   --->   Operation 109 'specpipeline' 'specpipeline_ln40' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 110 [1/1] (0.00ns)   --->   "%specloopname_ln43 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [csr_vmul.cpp:43]   --->   Operation 110 'specloopname' 'specloopname_ln43' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 111 [1/1] (1.58ns)   --->   "%store_ln40 = store i32 %sum_1, i32 %sum" [csr_vmul.cpp:40]   --->   Operation 111 'store' 'store_ln40' <Predicate = true> <Delay = 1.58>
ST_32 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln43 = br void %for.inc" [csr_vmul.cpp:43]   --->   Operation 112 'br' 'br_ln43' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation 64 bit ('indvar') [10]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar' [21]  (1.588 ns)

 <State 2>: 5.108ns
The critical path consists of the following:
	'load' operation 64 bit ('i', csr_vmul.cpp:43) on local variable 'i', csr_vmul.cpp:43 [26]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln43', csr_vmul.cpp:43) [29]  (3.520 ns)
	'store' operation 0 bit ('store_ln43', csr_vmul.cpp:43) of variable 'add_ln43', csr_vmul.cpp:43 on local variable 'indvar' [57]  (1.588 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [38]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [38]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [38]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [38]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [38]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [38]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [38]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [38]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_read', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [39]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [44]  (7.300 ns)

 <State 13>: 3.520ns
The critical path consists of the following:
	'add' operation 64 bit ('add_ln45_2', csr_vmul.cpp:45) [47]  (3.520 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [51]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [51]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [51]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [51]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [51]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [51]  (7.300 ns)

 <State 20>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [51]  (7.300 ns)

 <State 21>: 7.300ns
The critical path consists of the following:
	bus request operation ('gmem_load_2_req', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [51]  (7.300 ns)

 <State 22>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_2_read', csr_vmul.cpp:45) on port 'gmem' (csr_vmul.cpp:45) [52]  (7.300 ns)

 <State 23>: 5.702ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', csr_vmul.cpp:45) [54]  (5.702 ns)

 <State 24>: 5.702ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', csr_vmul.cpp:45) [54]  (5.702 ns)

 <State 25>: 5.702ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', csr_vmul.cpp:45) [54]  (5.702 ns)

 <State 26>: 5.702ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', csr_vmul.cpp:45) [54]  (5.702 ns)

 <State 27>: 7.256ns
The critical path consists of the following:
	'load' operation 32 bit ('sum_load', csr_vmul.cpp:45) on local variable 'sum', csr_vmul.cpp:40 [33]  (0.000 ns)
	'fadd' operation 32 bit ('sum', csr_vmul.cpp:45) [55]  (7.256 ns)

 <State 28>: 7.256ns
The critical path consists of the following:
	'fadd' operation 32 bit ('sum', csr_vmul.cpp:45) [55]  (7.256 ns)

 <State 29>: 7.256ns
The critical path consists of the following:
	'fadd' operation 32 bit ('sum', csr_vmul.cpp:45) [55]  (7.256 ns)

 <State 30>: 7.256ns
The critical path consists of the following:
	'fadd' operation 32 bit ('sum', csr_vmul.cpp:45) [55]  (7.256 ns)

 <State 31>: 7.256ns
The critical path consists of the following:
	'fadd' operation 32 bit ('sum', csr_vmul.cpp:45) [55]  (7.256 ns)

 <State 32>: 1.588ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln40', csr_vmul.cpp:40) of variable 'sum', csr_vmul.cpp:45 on local variable 'sum', csr_vmul.cpp:40 [59]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
